{"version":3,"sources":["./src/app/planetservice.service.ts","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/tab1/tab1.component.ts","./src/app/tab1/tab1.component.html","./src/app/tab2/tab2.component.ts","./src/app/tab2/tab2.component.html","./src/app/app-routing.module.ts","./src/app/tabservice.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';  \n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlanetserviceService {\n\n  constructor(private http: HttpClient) {}\n  \n  planetUrl = \"https://assignment-machstatz.herokuapp.com/planet\";\n  \n  getPlanets(){\n    return this.http.get(this.planetUrl);\n  }\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'planets';\n}\n","<style>\n/*   .toolbar {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    height: 60px;\n    display: flex;\n    align-items: center;\n    background-color: #1976d2;\n    color: white;\n    font-weight: 600;\n  }\n  .toolbar1 {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    height: 60px;\n    display: flex;\n    align-items: center;\n    background-color: #1976d2;\n    color: white;\n    font-weight: 600;\n  } */\n\n  svg#clouds {\n    position: fixed;\n    bottom: -160px;\n    left: -230px;\n    z-index: -10;\n    width: 1920px;\n  }\n\n\n  /* Responsive Styles */\n  @media screen and (max-width: 767px) {\n\n    .card-container>*:not(.circle-link),\n    .terminal {\n      width: 100%;\n    }\n\n    .card:not(.highlight-card) {\n      height: 16px;\n      margin: 8px 0;\n    }\n\n    .card.highlight-card span {\n      margin-left: 72px;\n    }\n\n    svg#rocket-smoke {\n      right: 120px;\n      transform: rotate(-5deg);\n    }\n  }\n\n  @media screen and (max-width: 575px) {\n    svg#rocket-smoke {\n      display: none;\n      visibility: hidden;\n    }\n  }\n.col{\n  text-align: center;\n}\n  .col1{\n    border-right: 2px solid red;\n    text-align: center;\n  }\n  .toolbar1{\n    text-align: center;\n  }\n\n  .col1,.col2 {\n    background-color: #1976d2;\n    color: white;\n    font-weight: 600;\n  }\n\n</style>\n\n<!-- Toolbar -->\n<div class=\"container mt-2\">\n  <div class=\"toolbar row\">\n    <div class=\"col col1\">Planets</div>\n    <div class=\"col col2\">Favourite Planets</div>\n  </div>\n\n  <div class=\"toolbar1 row\">\n    <div class=\"col \"><app-tab1></app-tab1></div>\n    <div class=\"col \"><app-tab2></app-tab2></div>\n  </div>\n</div>\n\n\n\n<div class=\"content\" role=\"main\">\n  <svg id=\"rocket-smoke\" alt=\"Rocket Ship Smoke\" xmlns=\"http://www.w3.org/2000/svg\" width=\"516.119\" height=\"1083.632\"\n    viewBox=\"0 0 516.119 1083.632\">\n    <path id=\"Path_40\" data-name=\"Path 40\"\n      d=\"M644.6,141S143.02,215.537,147.049,870.207s342.774,201.755,342.774,201.755S404.659,847.213,388.815,762.2c-27.116-145.51-11.551-384.124,271.9-609.1C671.15,139.365,644.6,141,644.6,141Z\"\n      transform=\"translate(-147.025 -140.939)\" fill=\"#f5f5f5\" />\n  </svg>\n  <div class=\"card-container\">\n  </div>\n</div>\n\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { Tab1Component } from './tab1/tab1.component';\nimport { Tab2Component } from './tab2/tab2.component';\n\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    Tab1Component,\n    Tab2Component\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { PlanetserviceService } from '../planetservice.service';\nimport { TabserviceService } from '../tabservice.service';\nimport { Route, Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-tab1',\n  templateUrl: './tab1.component.html',\n  styleUrls: ['./tab1.component.css']\n})\nexport class Tab1Component implements OnInit {\n\n  constructor(private service: PlanetserviceService, private tab: TabserviceService, private router: Router, private http: HttpClient) {\n    this.service = service;\n    this.router = router;\n  }\n  status: any = [];\n\n  ngOnInit(): void {\n    this.service.getPlanets()\n      .subscribe(data => {\n        this.status = data\n        console.log(data)\n      });\n  }\n\n  changeStatus(id: any, event: any) {\n    console.log(id, event.target.checked);\n    this.tab.saveData(id, event.target.checked);\n    this.router.navigate(['/tab2']);\n    console.log(\"navigare\")\n  }\n\n\n}\n","<b>Select Your Favourite planets:</b><br>\n<div class=\"row mt-4\" *ngFor=\"let t of status\">\n    <div class=\"col\">{{t.id}}</div>\n    <div class=\"col\"><input type=\"checkbox\" [checked]=\"t.isFavourite\" (change)=\"changeStatus(t.id,$event)\"></div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { TabserviceService } from '../tabservice.service';\nimport { Route, Router } from '@angular/router';\nimport * as $ from 'jquery';\n\n@Component({\n  selector: 'app-tab2',\n  templateUrl: './tab2.component.html',\n  styleUrls: ['./tab2.component.css']\n})\nexport class Tab2Component implements OnInit {\n\n\n  constructor(private tab: TabserviceService, private router: Router) { }\n\n  favouritePlanet: string[] = []\n  planetname: any;\n\n  event: any;\n  ngOnInit(): void {\n    let element: HTMLElement = document.getElementById(\"planets\") as HTMLElement;\n    element.click();\n  }\n\n  ShowPlanets() {\n    this.planetname = this.tab.getData();\n    this.event = this.tab.getEvent();\n    console.log(this.event);\n\n    if (this.event == true) {\n      this.favouritePlanet.push(this.planetname);\n    } else if (this.event == false) {\n      var index = this.favouritePlanet.indexOf(this.planetname);\n      if (index !== -1) {\n        this.favouritePlanet.splice(index, 1);\n      }\n    }\n\n    console.log(this.favouritePlanet)\n    this.router.navigate(['/']);\n  }\n\n}\n","<b id=\"planets\" on-click=\"ShowPlanets()\">Your Favourite planets:</b><br>\n<div class=\"row mt-4\" *ngFor=\"let p of favouritePlanet\">\n    <div class=\"col planets\">{{p}}</div>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { Tab1Component } from '../app/tab1/tab1.component';\nimport { Tab2Component } from \"../app/tab2/tab2.component\";\n\nconst routes: Routes = [\n  {path:\"tab1\", component:Tab1Component},\n  {path:\"tab2\", component:Tab2Component}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Injectable } from '@angular/core';\n\nexport interface myData {\n  name: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TabserviceService {\n\n  constructor() { }\n\n  planets: any;\n  sharingData: myData = { name: \"\" };\n  event: any;\n  saveData(str: any, event: any) {\n    console.log('save data function called' + str + this.sharingData.name);\n    this.sharingData.name = str;\n    this.event = event;\n  }\n  getData() {\n    console.log('get data function called', this.sharingData);\n    return this.sharingData.name;\n  }\n  getEvent() {\n    console.log('get data function called', this.sharingData);\n    return this.event;\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}